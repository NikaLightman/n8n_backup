{"createdAt":"2025-07-02T10:31:16.962Z","updatedAt":"2025-07-25T11:52:36.000Z","id":"R3qUTCPqhxh8EybX","name":"VM_Контент_план_TG","active":false,"isArchived":false,"nodes":[{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9d5c7366-3dc9-44c5-8819-84debbf03345","leftValue":"={{ $json.message.audio.file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Audio"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.voice.file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true},"id":"9b24beeb-491e-4995-992c-1d4139313e9c"}],"combinator":"and"},"renameOutput":true,"outputKey":"Voice"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d8581103-04e9-47b5-8ad3-1c1cd6fd0f9f","leftValue":"={{ $json.message.video.file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Video"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"373fcae4-c71d-4d91-949b-08e1ee7202d6","leftValue":"={{ $json.message.photo?.last().file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Photo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"5983e977-eb55-4af1-9fd2-3e5894b22c75","leftValue":"={{ $json.message.document.file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"File"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8c844924-b2ed-48b0-935c-c66a8fd0c778","leftValue":"={{ $json.message.text }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Text"}]},"options":{}},"id":"bcc29686-8c2c-484c-bbab-5be7bc195232","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-2340,-460]},{"parameters":{"resource":"file","fileId":"={{ $json.message.video.file_id }}"},"id":"b5a9dfcc-ae5f-4337-b620-da754e9babd7","name":"Download video","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1780,-620],"webhookId":"d62534f5-2dbe-49a4-ad6b-1544f5918d9c","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{"resource":"audio","operation":"transcribe","options":{}},"id":"2927044a-429f-4bc8-a664-f9255f1d8d06","name":"Transcribe video","type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.6,"position":[-1560,-620],"credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Execute workflow trigger').item.json.message.caption }}.\n\nДополнительно:\n{{ $('Transcribe video').item.json.text }}.","type":"string"}]},"options":{}},"id":"2562a8b0-4fbb-4ff1-b72c-d0165b4c89aa","name":"Set video text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1340,-620]},{"parameters":{"resource":"file","fileId":"={{ $json.message.photo.last().file_id }}"},"id":"331f2fc5-624b-40e0-9085-40d01bfe4d73","name":"Download photo","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1940,-380],"webhookId":"d62534f5-2dbe-49a4-ad6b-1544f5918d9c","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{"resource":"file","fileId":"={{ $json.message.document.file_id }}"},"id":"04aff8bc-05fb-435d-ac6f-42d93573b36f","name":"Download document","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-2120,-160],"webhookId":"d62534f5-2dbe-49a4-ad6b-1544f5918d9c","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"GPT-4O"},"text":"=Ты — эксперт, который видит изображение и описывает его смысл очень кратко и специалист по клинической психологии, особенно в области взаимоотношений между партнёрами.\n\nПосмотри на это изображение и дай короткую, лаконичную тему, которая максимально точно отражает то, что на фото изображено.\n\nОтветь одним коротким предложением или фразой, без лишних подробностей и рассуждений.","inputType":"base64","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1360,-380],"id":"05c153f4-2031-4575-a6aa-89ed22b09062","name":"Transcribe photo","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Execute workflow trigger').item.json.message.caption }}.\n\nДополнительно:\n{{ $('Transcribe photo').item.json.content }}","type":"string"}]},"options":{}},"id":"e27f46e5-5686-47ec-969e-078d467b58dc","name":"Set photo text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1080,-380]},{"parameters":{"jsCode":"const item = $input.all()[0];\n\nif (item.binary && item.binary.data) {\n  item.binary.data.mimeType = 'image/jpeg';\n}\n\nreturn [item];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1640,-380],"id":"47a471aa-2516-43d0-9b0f-eab5fd94fdb4","name":"Convert to image type"},{"parameters":{"resource":"file","options":{"purpose":"assistants"}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1900,-160],"id":"6cc074f6-fb65-4552-b2b9-66c2e53b01c9","name":"Upload document","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"assistant","operation":"create","modelId":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"GPT-4O"},"name":"content_assistant","instructions":"=Ты — эксперт, который читает документ и описывает его смысл очень кратко и специалист по клинической психологии, особенно в области взаимоотношений между партнёрами.\n\nПросмотри содержимое документа и дай короткую, лаконичную тему, которая максимально точно отражает его суть.\n\nОтветь одним коротким предложением или фразой, без лишних подробностей и рассуждений.","codeInterpreter":true,"knowledgeRetrieval":true,"file_ids":"={{ $('Upload document')?.item?.json?.id || \"default.pdf\"}}","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1720,-160],"id":"ed3ae2fc-b530-4c52-806b-c00d4e13691f","name":"Create assistant","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"assistant","operation":"deleteAssistant","assistantId":{"__rl":true,"value":"={{ $('Create assistant').item.json.id }}","mode":"id"}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1200,-160],"id":"2f7a94cd-ceac-460f-81a3-874b044c86ec","name":"Delete assistant","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"file","operation":"deleteFile","fileId":{"__rl":true,"value":"={{ $('Upload document').item.json.id }}","mode":"id"}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1020,-160],"id":"2f5f6fcd-66e4-433d-b178-b9f70ff10dc9","name":"Delete document","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Execute workflow trigger').item.json.message.caption }}.\n\nДополнительно:\n{{ $('Transcribe document').item.json.output }}","type":"string"}]},"options":{}},"id":"dddc41d6-23dd-43ec-a2cd-827c48649cca","name":"Set document text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-860,-160]},{"parameters":{"numberInputs":6},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-580,-460],"id":"46b38b8a-8f3c-4083-8726-0a3797e83cb1","name":"Merge"},{"parameters":{"resource":"assistant","assistantId":{"__rl":true,"value":"={{ $('Create assistant').item.json.id }}","mode":"id"},"prompt":"define","text":"=Кратко опиши тему файла, который тебе доступен (в тебя загружен единственный файл)","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1540,-160],"id":"4c7a7a1e-676f-4af2-9afc-67d8aab23fc7","name":"Transcribe document","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"file","fileId":"={{ $json.message.voice.file_id }}"},"id":"4d4b2f16-dc65-434f-93a3-5a5132a71120","name":"Download voice","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1780,-840],"webhookId":"d62534f5-2dbe-49a4-ad6b-1544f5918d9c","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{"resource":"audio","operation":"transcribe","options":{}},"id":"f79ee97a-d195-4348-a981-6eab35baa49b","name":"Transcribe voice","type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.6,"position":[-1560,-840],"credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"file","fileId":"={{ $json.message.audio.file_id }}"},"id":"a788e4a3-c8d4-4a21-87b8-a4ca4d5aa579","name":"Download audio","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1780,-1060],"webhookId":"d62534f5-2dbe-49a4-ad6b-1544f5918d9c","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{"resource":"audio","operation":"transcribe","options":{}},"id":"c224520c-95a6-401b-b962-e8c3b2451bcb","name":"Transcribe audio","type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.6,"position":[-1560,-1060],"credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Execute workflow trigger').item.json.message.caption }}.\n\nДополнительно:\n{{ $('Transcribe audio').item.json.text }}.","type":"string"}]},"options":{}},"id":"ae515f55-8678-47a9-8ebd-6b80a62901ee","name":"Set audio text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1360,-1060]},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-search-preview","mode":"list","cachedResultName":"GPT-4O-SEARCH-PREVIEW"},"messages":{"values":[{"content":"=Сырая идея:\n{{ $('Merge').item.json.text }}"},{"content":"=Ты — профессиональный копирайтер и специалист по клинической психологии, особенно в области отношений между партнёрами.\n\nЯ отправляю тебе сырую идею — это может быть неструктурированный текст, набросок, фраза или описание ситуации, ссылка на какой-то источник в интернете.\n\nТвоя задача:\n1. Проанализируй суть.\n2. Сформулируй чёткую, актуальную и максимально цепляющую тему поста на русском языке.\n3. Придумай очень цепляющий, провокационный, интригующий и эмоциональный кликбейт-заголовок в стиле желтой прессы — с максимальным вниманием к эмоциям, интриге, сенсационности. Заголовок должен вызывать шок, возмущение, интерес, или обещание раскрытия \"секрета\". Не бойся быть смелым.\n4. Напиши большую и развёрнутую статью объёмом от 1000 до 1100 символов, раскрывающую суть темы:\n   - ❗️Важно: статья должна быть научно обоснованной, с точными терминами и фактами.\n   - ❗️Важно: но при этом статья должна быть живой, эмоциональной, читаемой, как материал для широкой аудитории.\n   - ❗️Важно: Используй абзацы, подзаголовки, немного смайликов (выделяй ими подзаголовки), ритм, избегай канцелярита и академической скуки.\n   - ❗️Важно: не вставляй никакие ссылки в текст статьи. В тексте статьи не должно быть упоминаний URL, названий сайтов или ссылок на любые ресурсы в интернете. Если хочешь сослаться на источник — просто упомяни, что \"учёные утверждают\", \"по данным исследований\" и т.п. без конкретизации. \n   - ❗️Важно: объем текста обязательно не больше 1100 символов - иначе система не сможет его обработать.\n5. Найди и укажи от 3 до 5 реальных ссылок на статьи или материалы в интернете, которые соответствуют теме статьи:\n   - ❗️❗️❗️ОЧЕНЬ ВАЖНО: ссылки помести в поле related_urls, в тексте статьи не используй их вообще.\n   - ❗️Важно: ссылки обязательно должны вести на реальные материалы, текст которых написан на русском языке.\n   - ❗️Важно: ссылки обязательно должны быть на реальные материалы, не должно быть ссылок на несуществующие страницы - проверяй их перед использованием.\n   - ❗️Важно: ссылки могут быть на публикации в научных журналах, на популярные порталы психологии, Wikipedia, СМИ или блоги — но только реальные рабочие URL.\n\n❗️❗️❗️ОЧЕНЬ ВАЖНО:\n❗️Ответ должен быть строго в формате JSON. Никаких пояснений, комментариев, Markdown-блоков, кавычек в начале и конце, префиксов вида json\\n и прочего.\n\n❗️Ответ — это только чистый JSON-объект. Например:\n{\n  \"topic\": \"Почему мы влюбляемся в недоступных партнёров?\",\n  \"headline\": \"Недоступный? Значит, влюбишься: что психология говорит о наших привязанностях\",\n  \"article\": \"Многие из нас испытывают притяжение к тем, кто эмоционально или физически недоступен. Это может быть связано с детскими сценариями, травмами привязанности или просто потребностью в подтверждении собственной значимости. В статье мы разберём, почему такие отношения кажутся такими притягательными и как перестать наступать на те же грабли.\",\n  \"related_urls\": [\n    \"https://eksmo.ru/articles/kak-raspoznat-abyuz-v-otnosheniyakh-11-22-ID15615966/\",\n    \"https://urgaps.ru/blog/abyuz-formy-priznaki-i-posledstviya\",\n    \"https://ru.wikipedia.org/wiki/Созависимость\"\n  ]\n}","role":"system"}]},"options":{"maxTokens":1000}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-400,-400],"id":"8387900d-2db7-4860-9483-53bec04f431a","name":"OpenAI generate topic","credentials":{"openAiApi":{"id":"GNF43Sew2wDttbmY","name":"OpenAi VV"}}},{"parameters":{"resource":"databasePage","databaseId":{"__rl":true,"value":"22457ae1-e71a-81a4-bf5b-c48571c73d7b","mode":"list","cachedResultName":"Контент ","cachedResultUrl":"https://www.notion.so/22457ae1e71a81a4bf5bc48571c73d7b"},"propertiesUi":{"propertyValues":[{"key":"Тема|title","title":"={{ $('Parse OpenAI response').item.json.topic }}"},{"key":"Статус|status","statusValue":"Создан"},{"key":"Заголовок|rich_text","textContent":"={{ $('Parse OpenAI response').item.json.headline }}"},{"key":"Текст|rich_text","textContent":"={{ $('Parse OpenAI response').item.json.article }}"},{"key":"Доп. URL|rich_text","textContent":"={{ $('Parse OpenAI response').item.json.related_urls.join('\\n\\n') }}"},{"key":"Статус поста|status","statusValue":"=Создана идея"},{"key":"Тип контента|status","statusValue":"=Идея"}]},"options":{}},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[140,-400],"id":"86e0f730-478a-4d58-aadf-f8fda98b6117","name":"Notion content plan","credentials":{"notionApi":{"id":"09WDFf4vp7iD93dG","name":"Notion account VM "}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Получаем текст\nlet inputText = $json.message?.content;\n\n// Удаляем Markdown-блоки и лишние кавычки, если есть\ninputText = inputText.trim();\nif (inputText.startsWith(\"```json\")) inputText = inputText.slice(7).trim();\nif (inputText.startsWith(\"```\")) inputText = inputText.slice(3).trim();\nif (inputText.endsWith(\"```\")) inputText = inputText.slice(0, -3).trim();\n\n// Парсинг JSON-ответа от OpenAI\nlet data;\ndata = JSON.parse(inputText);\n\n// Очищаем статью\nlet cleanedArticle = data.article;\n\n// Удаляем Markdown-ссылки: [текст](url)\ncleanedArticle = cleanedArticle.replace(/\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\)]+)\\)/g, '$1');\n\n// Удаляем одиночные URL\ncleanedArticle = cleanedArticle.replace(/https?:\\/\\/[^\\s)]+/g, '');\n\n// Удаляем \"хвосты\" типа (ru.wikipedia.org), (cameralabs.org) и т.п.\ncleanedArticle = cleanedArticle.replace(/\\([a-zA-Z0-9\\-.]+\\.[a-z]{2,}(\\/[^\\)]*)?\\)/g, '');\n\n// Удаляем лишние пробелы и пустые скобки\ncleanedArticle = cleanedArticle.replace(/\\(\\s*\\)/g, '').trim();\n\n// Заменяем в объекте\ndata.article = cleanedArticle;\n\n// Возвращаем очищенные данные\nreturn { json: data };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-60,-400],"id":"f18c2b37-84cb-4381-a249-bf3cbccf2560","name":"Parse OpenAI response"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const input = $json.message.text || '';\nconst regex = /(https?:\\/\\/(?:www\\.)?(?:youtube\\.com|youtu\\.be|instagram\\.com|instagr\\.am)[^\\s]*)/gi;\n\nconst matches = [...input.matchAll(regex)];\n\nif (matches.length === 0) {\n  return {\n    json: {\n      text: input.trim(),\n      url: null,\n      type: 'unknown'\n    }\n  };\n}\n\nconst firstMatch = matches[0][0];\nlet type = '';\n\nif (/youtube\\.com|youtu\\.be/.test(firstMatch)) {\n  type = 'youtube';\n} else if (/instagram\\.com|instagr\\.am/.test(firstMatch)) {\n  type = 'instagram';\n} else {\n  type = 'unknown';\n}\n\nconst cleanedText = input.replace(firstMatch, '').trim();\n\nreturn {\n  json: {\n    text: cleanedText,\n    url: firstMatch,\n    type: type\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2180,160],"id":"b2c0f265-0466-4f30-8291-961403a750f4","name":"Check video links"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"de8a1c58-28ef-4ac0-8252-ac3b448088f9","leftValue":"={{ $json.type }}","rightValue":"unknown","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Simple text"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.type }}","rightValue":"unknown","operator":{"type":"string","operation":"notEquals"},"id":"046f1411-cddb-453f-94b3-ca0ee7cafc92"}],"combinator":"and"},"renameOutput":true,"outputKey":"Internet video"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-1940,160],"id":"ca6fd189-9788-402f-aa2c-82a4373bd24e","name":"Switch for links"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ Math.floor(Date.now() / 1000 / 300) }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-1300,20],"id":"54af1cc4-d756-4e33-803f-688b304fb715","name":"Transcribe document memory"},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Check video links').item.json.text }}\n\nДополнительно:","type":"string"}]},"options":{}},"id":"2d887945-ddaf-4e7b-aac6-59af878c0fcc","name":"Set internet video text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1360,300],"disabled":true},{"parameters":{"command":"=echo \"\nimport sys\nimport subprocess\nimport os\nimport mimetypes\nfrom googleapiclient.errors import HttpError\nimport pickle\nfrom google.oauth2.credentials import Credentials\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom googleapiclient.http import MediaIoBaseUpload\nfrom googleapiclient.discovery import build\nfrom google.auth.transport.requests import Request\nimport requests\nfrom io import BytesIO\nimport contextlib\n\n@contextlib.contextmanager\ndef suppress_stdout():\n    with open(os.devnull, 'w') as devnull:\n        old_stdout = sys.stdout\n        sys.stdout = devnull\n        try:\n            yield\n        finally:\n            sys.stdout = old_stdout\n\ndef auto_install(package, import_name=None):\n    try:\n        if import_name:\n            __import__(import_name)\n        else:\n            __import__(package)\n    except ImportError:\n        print(f\"Пакет {package} не установлен. Устанавливаю автоматически...\")\n        subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n\n# Устанавливаем необходимые пакеты\n# Для Google Drive\nauto_install('google-api-python-client', 'googleapiclient')\nauto_install('google-auth-oauthlib')\nauto_install('google-auth-httplib2')\nauto_install('pickle5', 'pickle')  # pickle обычно встроен, но на всякий случай\n\n# Для Яндекс.Диска\nauto_install('requests')\n\n# Для yt-dlp\nauto_install('yt-dlp')\n\n\n# Получение ссылки на видео из аргументов командной строки\nif len(sys.argv) < 2:\n    print(\"Использование: python integrate_API_YouTube.py <ссылка_на_видео>\")\n    print(\"Пример: python integrate_API_YouTube.py https://youtube.com/shorts/oJTIWpsSoxs?si=Pu4bg5TUtqa84VmG\")\n    sys.exit(1)\nurl = sys.argv[1]\n\ntry:\n    import yt_dlp\nexcept ImportError:\n    print(\"yt-dlp не установлен. Устанавливаю автоматически...\")\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", \"yt-dlp\"])\n    import yt_dlp\n\n# SOCKS4 прокси\n'''\nsocks4_proxy = \"socks4://194.156.74.50:9999\"\n\nydl_opts = {\n    'proxy': socks4_proxy,\n}\n'''\n\n# with yt_dlp.YoutubeDL(ydl_opts) as ydl:\n\n# Константа для выбора облака: 'google' или 'yandex'\nDEFAULT_CLOUD = 'google'  # Можно изменить на 'yandex'\n\ndef get_gdrive_service(credentials_file: str):\n    SCOPES = ['https://www.googleapis.com/auth/drive.file']\n    creds = None\n    token_file = f\"token_{os.path.splitext(os.path.basename(credentials_file))[0]}.pickle\"\n    if os.path.exists(token_file):\n        with open(token_file, 'rb') as token:\n            creds = pickle.load(token)\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file(credentials_file, SCOPES)\n            creds = flow.run_local_server(port=0)\n        with open(token_file, 'wb') as token:\n            pickle.dump(creds, token)\n    return build('drive', 'v3', credentials=creds)\n\ndef find_or_create_folder(service, folder_path: str) -> str:\n    parent_id = 'root'\n    folders = folder_path.split('/')\n    for folder_name in folders:\n        query = (f\"name = '{folder_name}' and \"\n                 f\"mimeType = 'application/vnd.google-apps.folder' and \"\n                 f\"'{parent_id}' in parents and \"\n                 f\"trashed = false\")\n        response = service.files().list(q=query, spaces='drive', fields='files(id, name)').execute()\n        files = response.get('files', [])\n        if not files:\n            file_metadata = {\n                'name': folder_name,\n                'mimeType': 'application/vnd.google-apps.folder',\n                'parents': [parent_id]\n            }\n            folder = service.files().create(body=file_metadata, fields='id').execute()\n            parent_id = folder.get('id')\n        else:\n            parent_id = files[0].get('id')\n    return parent_id\n\ndef upload_stream_to_gdrive(stream, file_name: str, gdrive_folder_path: str, credentials_file: str):\n    print(f\"--- Начало загрузки для аккаунта: {credentials_file} ---\")\n    try:\n        service = get_gdrive_service(credentials_file)\n        print(f\"Проверяю путь на Google Drive: '{gdrive_folder_path}'...\")\n        folder_id = find_or_create_folder(service, gdrive_folder_path)\n        file_metadata = {\n            'name': file_name,\n            'parents': [folder_id]\n        }\n        mime_type, _ = mimetypes.guess_type(file_name)\n        media = MediaIoBaseUpload(stream, mimetype=mime_type, resumable=True)\n        print(f\"Загружаю файл '{file_name}'...\")\n        request = service.files().create(\n            body=file_metadata,\n            media_body=media,\n            fields='id, name'\n        )\n        response = None\n        while response is None:\n            status, response = request.next_chunk()\n            if status:\n                print(f\"Загружено {int(status.progress() * 100)}%\")\n        print(f\"🎉 Файл '{response.get('name')}' успешно загружен. ID файла: {response.get('id')}\")\n    except HttpError as error:\n        print(f\"Произошла ошибка: {error}\")\n    except Exception as e:\n        print(f\"Произошла непредвиденная ошибка: {e}\")\n\n# --- Функции для загрузки на облака ---\ndef upload_to_google_drive(filepath):\n    \"\"\"\n    Загрузка файла на Google Диск.\n    Требуется файл credentials.json (OAuth 2.0 client ID) в папке скрипта.\n    При первом запуске появится окно авторизации Google.\n    \"\"\"\n    SCOPES = ['https://www.googleapis.com/auth/drive.file']\n    creds = None\n    # Файл token.pickle хранит токен пользователя\n    if os.path.exists('token.pickle'):\n        with open('token.pickle', 'rb') as token:\n            creds = pickle.load(token)\n    # Если нет токена или он недействителен — авторизация\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)\n            creds = flow.run_local_server(port=0)\n        # Сохраняем токен\n        with open('token.pickle', 'wb') as token:\n            pickle.dump(creds, token)\n    try:\n        service = build('drive', 'v3', credentials=creds)\n        file_metadata = {'name': os.path.basename(filepath)}\n        media = MediaIoBaseUpload(filepath, resumable=True)\n        file = service.files().create(body=file_metadata, media_body=media, fields='id').execute()\n        print(f\"Файл {filepath} успешно загружен на Google Диск, id: {file.get('id')}\")\n        return True\n    except Exception as e:\n        print(f\"Ошибка загрузки на Google Диск: {e}\")\n        return False\n\ndef upload_to_yandex_disk(filepath):\n    \"\"\"\n    Загрузка файла на Яндекс.Диск.\n    Требуется OAuth-токен Яндекс.Диска (YANDEX_DISK_TOKEN).\n    \"\"\"\n    # Вставьте ваш токен сюда или получите из переменной окружения\n    YANDEX_DISK_TOKEN = os.getenv('YANDEX_DISK_TOKEN', 'ВАШ_ТОКЕН_ЗДЕСЬ')\n    if YANDEX_DISK_TOKEN == 'ВАШ_ТОКЕН_ЗДЕСЬ':\n        print(\"Не задан токен Яндекс.Диск! Установите переменную окружения YANDEX_DISK_TOKEN или впишите токен в код.\")\n        return False\n    # Получаем ссылку для загрузки\n    upload_url = 'https://cloud-api.yandex.net/v1/disk/resources/upload'\n    params = {\n        'path': os.path.basename(filepath),\n        'overwrite': 'true'\n    }\n    headers = {\n        'Authorization': f'OAuth {YANDEX_DISK_TOKEN}'\n    }\n    try:\n        response = requests.get(upload_url, params=params, headers=headers)\n        response.raise_for_status()\n        href = response.json()['href']\n        # Загружаем файл\n        with open(filepath, 'rb') as f:\n            put_response = requests.put(href, files={'file': f})\n        if put_response.status_code == 201 or put_response.status_code == 202:\n            print(f\"Файл {filepath} успешно загружен на Яндекс.Диск!\")\n            return True\n        else:\n            print(f\"Ошибка загрузки на Яндекс.Диск: {put_response.text}\")\n            return False\n    except Exception as e:\n        print(f\"Ошибка загрузки на Яндекс.Диск: {e}\")\n        return False\n\ndef get_unique_gdrive_filename(service, folder_id, base_name):\n    \"\"\"\n    Проверяет, существует ли файл с таким именем в папке Google Диска.\n    Если существует, добавляет нумерацию к имени.\n    \"\"\"\n    name, ext = os.path.splitext(base_name)\n    candidate = base_name\n    i = 1\n    while True:\n        query = (f\"name = '{candidate}' and '{folder_id}' in parents and trashed = false\")\n        response = service.files().list(q=query, spaces='drive', fields='files(id, name)').execute()\n        files = response.get('files', [])\n        if not files:\n            return candidate\n        candidate = f\"{name}_{i}{ext}\"\n        i += 1\n\n# === ВСТАВЬТЕ СЮДА ПУТЬ К ПАПКЕ НА GOOGLE ДИСКЕ ===\ngdrive_folder_path = \"YouTube/Загрузки\"  # ← Здесь укажите нужный путь на Google Диске\ncredentials_file = \"credentials_personal.json\"  # ← Здесь укажите ваш credentials-файл\n\n# --- Скачивание видео в поток и загрузка на Google Диск ---\ntry:\n    ydl_opts = {\n        'format': 'best',\n        'quiet': True,\n        'noplaylist': True,\n        'outtmpl': '-',  # Вывод в stdout\n    }\n    buffer = BytesIO()\n    with yt_dlp.YoutubeDL(ydl_opts) as ydl:\n        info = ydl.extract_info(url, download=False)\n        file_name = f\"{info['title']}.{info['ext']}\"\n        # Получаем сервис Google Drive и id папки\n        service = get_gdrive_service(credentials_file)\n        folder_id = find_or_create_folder(service, gdrive_folder_path)\n        # Проверяем уникальность имени файла\n        unique_file_name = get_unique_gdrive_filename(service, folder_id, file_name)\n        print(f\"Скачиваю видео как '{unique_file_name}'...\")\n        # Скачиваем видео в поток BytesIO с подавлением вывода\n        with suppress_stdout():\n            cmd = [\"yt-dlp\", \"-f\", \"best\", \"-o\", \"-\", url]\n            proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL)\n            chunk_size = 1024 * 1024\n            while True:\n                chunk = proc.stdout.read(chunk_size)\n                if not chunk:\n                    break\n                buffer.write(chunk)\n            proc.stdout.close()\n            proc.wait()\n            buffer.seek(0)\n    upload_stream_to_gdrive(buffer, unique_file_name, gdrive_folder_path, credentials_file)\nexcept Exception as e:\n    print(f\"Ошибка при скачивании или загрузке: {e}\")\n    sys.exit(1)\n# --- Конец скрипта ---\n\" | python3 - '{{ $('Check video links').item.json.url }}'\n\n"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[-1600,300],"id":"6e5a6c05-c44c-4cd6-be7e-9c541001af70","name":"Execute Command","disabled":true},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-2800,-400],"id":"2648d251-5ec0-4cb7-97d3-c2211b6edd31","name":"Execute workflow trigger"},{"parameters":{"chatId":"={{ $('Set chat id for notification').item.json.tg_chat_id_for_notification }}","text":"=Идея успешно создана!","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[660,-420],"id":"8be8fa05-5968-403f-86f8-2e262e282081","name":"Finish of creation idea notification","webhookId":"375cfbd7-7c49-44cd-9aa7-3c70572e9b74","credentials":{"telegramApi":{"id":"CaPcuZpn2WokK4Nb","name":"VM_Постинг"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1100,160],"id":"ee0ec975-b270-4f75-9fb8-4e9ffe9a3a59","name":"Merge text data"},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Execute workflow trigger').item.json.message.caption }}.\n\nДополнительно:\n{{ $('Transcribe voice').item.json.text }}.","type":"string"}]},"options":{}},"id":"22020057-9031-4c69-9c90-004080b2a020","name":"Set voice text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1340,-840]},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $('Merge text data').item.json.text }}.","type":"string"}]},"options":{}},"id":"7161809e-8ad5-4107-8ebc-fe035ddd67ed","name":"Set text","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-860,160]},{"parameters":{"assignments":{"assignments":[{"id":"3c7c6617-0a6f-4f1e-bea6-a1c2d933ce96","name":"tg_chat_id_for_notification","value":"={{ $('Execute workflow trigger').item.json.message.chat.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1360,-1620],"id":"5b0a9d7b-35b5-43c0-9a9f-a287718aad96","name":"Set chat id for notification"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[440,-420],"id":"d3b63100-eecb-4b1c-b7c6-f3b1008eb26d","name":"Merge for notification"}],"connections":{"Switch":{"main":[[{"node":"Download audio","type":"main","index":0}],[{"node":"Download voice","type":"main","index":0}],[{"node":"Download video","type":"main","index":0}],[{"node":"Download photo","type":"main","index":0}],[{"node":"Download document","type":"main","index":0}],[{"node":"Check video links","type":"main","index":0}]]},"Download video":{"main":[[{"node":"Transcribe video","type":"main","index":0}]]},"Transcribe video":{"main":[[{"node":"Set video text","type":"main","index":0}]]},"Set video text":{"main":[[{"node":"Merge","type":"main","index":2}]]},"Download photo":{"main":[[{"node":"Convert to image type","type":"main","index":0}]]},"Download document":{"main":[[{"node":"Upload document","type":"main","index":0}]]},"Transcribe photo":{"main":[[{"node":"Set photo text","type":"main","index":0}]]},"Set photo text":{"main":[[{"node":"Merge","type":"main","index":3}]]},"Convert to image type":{"main":[[{"node":"Transcribe photo","type":"main","index":0}]]},"Upload document":{"main":[[{"node":"Create assistant","type":"main","index":0}]]},"Create assistant":{"main":[[{"node":"Transcribe document","type":"main","index":0}]]},"Delete assistant":{"main":[[{"node":"Delete document","type":"main","index":0}]]},"Delete document":{"main":[[{"node":"Set document text","type":"main","index":0}]]},"Set document text":{"main":[[{"node":"Merge","type":"main","index":4}]]},"Merge":{"main":[[{"node":"OpenAI generate topic","type":"main","index":0}]]},"Transcribe document":{"main":[[{"node":"Delete assistant","type":"main","index":0}]]},"Download voice":{"main":[[{"node":"Transcribe voice","type":"main","index":0}]]},"Transcribe voice":{"main":[[{"node":"Set voice text","type":"main","index":0}]]},"Download audio":{"main":[[{"node":"Transcribe audio","type":"main","index":0}]]},"Transcribe audio":{"main":[[{"node":"Set audio text","type":"main","index":0}]]},"Set audio text":{"main":[[{"node":"Merge","type":"main","index":0}]]},"OpenAI generate topic":{"main":[[{"node":"Parse OpenAI response","type":"main","index":0}]]},"Parse OpenAI response":{"main":[[{"node":"Notion content plan","type":"main","index":0}]]},"Check video links":{"main":[[{"node":"Switch for links","type":"main","index":0}]]},"Switch for links":{"main":[[{"node":"Merge text data","type":"main","index":0}],[{"node":"Execute Command","type":"main","index":0}]]},"Transcribe document memory":{"ai_memory":[[{"node":"Transcribe document","type":"ai_memory","index":0}]]},"Set internet video text":{"main":[[{"node":"Merge text data","type":"main","index":1}]]},"Execute Command":{"main":[[{"node":"Set internet video text","type":"main","index":0}]]},"Execute workflow trigger":{"main":[[{"node":"Switch","type":"main","index":0},{"node":"Set chat id for notification","type":"main","index":0}]]},"Notion content plan":{"main":[[{"node":"Merge for notification","type":"main","index":1}]]},"Merge text data":{"main":[[{"node":"Set text","type":"main","index":0}]]},"Set voice text":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Set text":{"main":[[{"node":"Merge","type":"main","index":5}]]},"Finish of creation idea notification":{"main":[[]]},"Merge for notification":{"main":[[{"node":"Finish of creation idea notification","type":"main","index":0}]]},"Set chat id for notification":{"main":[[{"node":"Merge for notification","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"global":{"tg_chat_id":1908115440}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"5c53e262-21d6-484e-9c6a-f76307a89a01","triggerCount":0,"tags":[{"createdAt":"2025-07-16T11:48:29.862Z","updatedAt":"2025-07-16T11:48:29.862Z","id":"gA8iWB5v23LRV9Nt","name":"vmkp"}]}