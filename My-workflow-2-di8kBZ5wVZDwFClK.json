{"createdAt":"2025-07-31T22:23:21.867Z","updatedAt":"2025-07-31T22:23:21.867Z","id":"di8kBZ5wVZDwFClK","name":"My workflow 2","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-260,0],"id":"61d3b4d7-265c-42e1-b1ca-06a6438076a0","name":"When clicking ‚ÄòExecute workflow‚Äô"},{"parameters":{"language":"python","pythonCode":"import asyncio\nfrom telethon import TelegramClient\nimport os\n\n# --- –í–ê–®–ò –î–ê–ù–ù–´–ï ---\n# –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. ID - –∫–∞–∫ —á–∏—Å–ª–æ, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤ –∫–∞–≤—ã—á–∫–∞—Ö.\napi_id = 12345678              # <--- –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® API ID\napi_hash = '–í–ê–®_API_HASH'      # <--- –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® API HASH\n# ------------------------------------\n\n# --- –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –ò–°–¢–û–†–ò–ò ---\n# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–µ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–ª–∏ —Ä–∞–Ω–µ–µ.\nsession_file = '/root/n8n_telegram.session'\n# –ü—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏–ª–∏ –≤–∏–¥–µ–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\nfile_path = '/root/test_story.jpg' # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n# –¢–µ–∫—Å—Ç –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏.\ncaption = \"–¢–µ—Å—Ç–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è –∏–∑ n8n! üöÄ\"\n# ------------------------------------\n\n# –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è\nasync def post_story():\n# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏. –ï—Å–ª–∏ –Ω–µ—Ç - –≤—ã—Ö–æ–¥–∏–º —Å –æ—à–∏–±–∫–æ–π.\n  if not os.path.exists(session_file):\n    return {\"status\": \"error\", \"message\": f\"–§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {session_file}. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Å–∫—Ä–∏–ø—Ç telegram_login.py –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\"}\n\n# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.\n  if not os.path.exists(file_path):\n    return {\"status\": \"error\", \"message\": f\"–§–∞–π–ª –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}\"}\n\n  client = TelegramClient(session_file, api_id, api_hash)\n  try:\n    await client.connect()\n    # –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.\n\n    result = await client.send_file(\n        'me',\n        file_path,\n        caption=caption,\n        is_story=True\n    )\n    return {\"status\": \"success\", \"story_id\": result.id, \"message\": \"–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!\"}\n  except Exception as e:\n      return {\"status\": \"error\", \"message\": str(e)}\n  finally:\n      if client.is_connected():\n          await client.disconnect()\n\n   # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é\n   loop = asyncio.get_event_loop()\n   result_data = loop.run_until_complete(post_story())\n\n   # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ n8n\n   return [{'json': result_data}]\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-40,0],"id":"5a4a0a0c-06ef-48bf-84ac-a2ef12410f17","name":"Code"}],"connections":{"When clicking ‚ÄòExecute workflow‚Äô":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e1a283aa-f318-4167-b8e1-e8e4d97ab85b","triggerCount":0,"tags":[]}